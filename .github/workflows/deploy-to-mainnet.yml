---
name: Deploy to Mainnet

on:
  workflow_call:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  deploy-mainnet:
    needs: [check-vars-and-secrets]
    name: Deploy new aleph-node image to Mainnet EKS
    runs-on: ubuntu-20.04
    environment: 'mainnet'
    env:
      AWS_REGION: us-east-1  # this region is used by all public ECR repos
    steps:
      - name: GIT | Checkout
        uses: actions/checkout@v3

      - name: Call action get-ref-properties
        id: get-ref-properties
        uses: ./.github/actions/get-ref-properties

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: GIT | Checkout argocd apps repo
        uses: actions/checkout@v3
        with:
          ref: mainnet
          repository: Cardinal-Cryptography/${{ secrets.REPO_ARGOCD_APPS_NAME }}
          token: ${{ secrets.CI_GH_TOKEN }}
          path: "${{ secrets.REPO_ARGOCD_APPS_NAME }}"

      - name: Init kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.8.6"

      - name: Update aleph-node docker image and trigger ArgoCD deploy for Mainnet
        env:
          MAINNET_IMAGE:
            ${{ vars.ECR_PUBLIC_REGISTRY }}aleph-node:${{ steps.get-ref-properties.outputs.tag }}
          REGIONS_AWS: 'eu-central-1,eu-west-1,eu-west-2,us-east-1,us-east-2'
        run: |
          IFS="," read -a region_array <<< ${{ env.REGIONS_AWS }}
          export aleph_path=$(pwd)
          export apps_name=${{ secrets.REPO_ARGOCD_APPS_NAME }}
          for i in "${region_array[@]}"; do
            # Deploy new image version for archivist
            cd ${aleph_path}/${apps_name}/aleph-node-archivists/overlays/mainnet/${i}
            kustomize edit set image \
              "aleph-node-archivist-image-placeholder=${{ env.MAINNET_IMAGE }}"

            # Deploy new image version for validator
            cd ${aleph_path}/${apps_name}/aleph-node-validators/overlays/mainnet/${i}
            kustomize edit set image \
              "aleph-node-validator-image-placeholder=${{ env.MAINNET_IMAGE }}"
          done

      - name: GIT | Commit changes to argocd apps repository.
        uses: EndBug/add-and-commit@v9.1.1
        with:
          author_name: ${{ secrets.AUTOCOMMIT_AUTHOR }}
          author_email: ${{ secrets.AUTOCOMMIT_EMAIL }}
          # yamllint disable-line rule:line-length
          message: "Update Mainnet docker image tag for release: ${{ steps.get-ref-properties.outputs.tag }}"
          add: "*.yaml"
          cwd: "${{ secrets.REPO_ARGOCD_APPS_NAME }}"

  slack:
    name: Slack notification
    runs-on: ubuntu-20.04
    needs: [deploy-mainnet]
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Send Slack message
        uses: ./.github/actions/slack-notification
        with:
          notify-on: "always"
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
