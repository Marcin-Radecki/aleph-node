---
name: Deploy to Mainnet

on:
  workflow_call:
    inputs:
      force:
        description: Set to 'true' to skip checking if deployed image is already on Testnet
        required: false
        type: boolean
        default: false

# there might be only one deployment to the Mainnet at a time
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false
# TODO add check dockerhub image exists
jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  check-if-image-deployed-to-testnet:
    needs: [check-vars-and-secrets]
    if: inputs.force != true
    runs-on: ubuntu-20.04
    steps:
      - name: Get docker image names
        id: get-docker-image-names
        uses: ./.github/actions/get-docker-image-names
        with:
          ecr-registry: ${{ vars.ECR_PUBLIC_REGISTRY }}

      - name: Compare latest Testnet image with current image being deployed to Mainnet
        uses: ./.github/workflows/compare-docker-image-digests.yml
        with:
          docker-image-a:
            ${{ steps.get-docker-image-names.outputs.dockerhub-testnet-latest-image }}
          docker-image-b: ${{ steps.get-docker-image-names.outputs.ecr-deploy-image }}

  deploy-to-mainnet:
    needs: [check-if-image-deployed-to-testnet]
    name: Deploy new aleph-node image to Mainnet EKS
    uses: .github/actions/update-node-image-infra
    with:
      env: mainnet
    secrets: inherit

  push-dockerhub-image-mainnet:
    needs: [check-vars-and-secrets]
    runs-on: ubuntu-20.04
    steps:
      - name: Get docker image names
        id: get-docker-image-names
        uses: ./.github/actions/get-docker-image-names
        with:
          ecr-registry: ${{ vars.ECR_PUBLIC_REGISTRY }}

      - name: Build and push Docker Hub image for Mainnet
        uses: ./.github/actions/build-and-push-dockerhub-image
        with:
          source-image: ${{ steps.get-docker-image-names.outputs.ecr-deploy-image }}
          target-image: ${{ steps.get-docker-image-names.outputs.dockerhub-mainnet-image }}
          additional-image:
            ${{ steps.get-docker-image-names.outputs.dockerhub-mainnet-latest-image }}
          dockerhub-username: "${{ secrets.DOCKERHUB_USERNAME }}"
          dockerhub-password: "${{ secrets.DOCKERHUB_PASSWORD }}"

  slack:
    name: Slack notification
    runs-on: ubuntu-20.04
    needs: [deploy-mainnet, push-dockerhub-image-mainnet]
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Send Slack message
        uses: ./.github/actions/slack-notification
        with:
          notify-on: "always"
        env:
          # TODO change it in next PR to SLACK_WEBHOOK_DEV_ONDUTY
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEMP_GRAFANA_NOTIFICATIONS }}
